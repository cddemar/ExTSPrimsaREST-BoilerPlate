{
	"components": {
		"examples": {},
		"headers": {},
		"parameters": {},
		"requestBodies": {},
		"responses": {},
		"schemas": {
			"PingResponse": {
				"properties": {
					"message": {
						"type": "string"
					}
				},
				"required": [
					"message"
				],
				"type": "object",
				"additionalProperties": false
			},
			"User": {
				"properties": {
					"updatedAt": {
						"type": "string",
						"format": "date-time"
					},
					"createdAt": {
						"type": "string",
						"format": "date-time"
					},
					"username": {
						"type": "string",
						"nullable": true
					},
					"surName": {
						"type": "string",
						"nullable": true
					},
					"lastName": {
						"type": "string",
						"nullable": true
					},
					"middleName": {
						"type": "string",
						"nullable": true
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"phone": {
						"type": "string",
						"nullable": true
					},
					"phoneCode": {
						"type": "string",
						"nullable": true
					},
					"password": {
						"type": "string"
					},
					"email": {
						"type": "string"
					},
					"id": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"updatedAt",
					"createdAt",
					"username",
					"surName",
					"lastName",
					"middleName",
					"name",
					"phone",
					"phoneCode",
					"password",
					"email",
					"id"
				],
				"type": "object",
				"description": "Model User"
			},
			"UserResponseWithRecords": {
				"properties": {
					"data": {
						"properties": {
							"records": {
								"items": {
									"$ref": "#/components/schemas/User"
								},
								"type": "array"
							}
						},
						"required": [
							"records"
						],
						"type": "object"
					},
					"message": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"data",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"UserResponse": {
				"properties": {
					"data": {
						"$ref": "#/components/schemas/User"
					},
					"message": {
						"type": "string"
					},
					"status": {
						"type": "number",
						"format": "double"
					}
				},
				"required": [
					"data",
					"message",
					"status"
				],
				"type": "object",
				"additionalProperties": false
			},
			"NotFoundError": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double",
						"default": 404
					},
					"messages": {
						"type": "string",
						"default": "Entity not found"
					},
					"data": {}
				},
				"type": "object",
				"additionalProperties": false
			},
			"AlreadyExistsError": {
				"properties": {
					"status": {
						"type": "number",
						"format": "double",
						"default": 409
					},
					"message": {
						"type": "string",
						"default": "The resource presents conflicts, it's possible that some of the fields already exists or the modification is not possible."
					},
					"data": {}
				},
				"type": "object",
				"additionalProperties": false
			},
			"Pick_User.email-or-name-or-lastName-or-password_": {
				"properties": {
					"email": {
						"type": "string"
					},
					"name": {
						"type": "string",
						"nullable": true
					},
					"lastName": {
						"type": "string",
						"nullable": true
					},
					"password": {
						"type": "string"
					}
				},
				"required": [
					"email",
					"name",
					"lastName",
					"password"
				],
				"type": "object",
				"description": "From T, pick a set of properties whose keys are in the union K"
			},
			"UserCreationParams": {
				"$ref": "#/components/schemas/Pick_User.email-or-name-or-lastName-or-password_"
			}
		},
		"securitySchemes": {}
	},
	"info": {
		"title": "ExTSPrimsaREST-BoilerPlate",
		"version": "1.0.0",
		"license": {
			"name": "ISC"
		},
		"contact": {}
	},
	"openapi": "3.0.0",
	"paths": {
		"/ping": {
			"get": {
				"operationId": "GetPing",
				"responses": {
					"200": {
						"description": "Success!",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/PingResponse"
								}
							}
						}
					}
				},
				"tags": [
					"Ping Controller"
				],
				"security": [],
				"parameters": []
			}
		},
		"/user": {
			"get": {
				"operationId": "GetAllUsers",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponseWithRecords"
								}
							}
						}
					}
				},
				"description": "Retrieves the details of all users.",
				"tags": [
					"User Controller"
				],
				"security": [],
				"parameters": []
			},
			"post": {
				"operationId": "CreateUser",
				"responses": {
					"201": {
						"description": "Resource created",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					},
					"409": {
						"description": "The resource presents conflicts, it's possible that some of the fields already exists or the modification is not possible.",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/AlreadyExistsError"
								}
							}
						}
					}
				},
				"description": "Creates an user.\nSupply the required user fields and receive corresponding user details.",
				"tags": [
					"User Controller"
				],
				"security": [],
				"parameters": [],
				"requestBody": {
					"required": true,
					"content": {
						"application/json": {
							"schema": {
								"$ref": "#/components/schemas/UserCreationParams"
							}
						}
					}
				}
			}
		},
		"/user/{userId}": {
			"get": {
				"operationId": "GetUserById",
				"responses": {
					"200": {
						"description": "Ok",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/UserResponse"
								}
							}
						}
					},
					"404": {
						"description": "Resource not found",
						"content": {
							"application/json": {
								"schema": {
									"$ref": "#/components/schemas/NotFoundError"
								}
							}
						}
					}
				},
				"description": "Retrieves the details of an existing user.\nSupply the unique user ID from either and receive corresponding user details.",
				"tags": [
					"User Controller"
				],
				"security": [],
				"parameters": [
					{
						"description": "The user's identifier",
						"in": "path",
						"name": "userId",
						"required": true,
						"schema": {
							"format": "double",
							"type": "number"
						}
					}
				]
			}
		}
	},
	"servers": [
		{
			"url": "https://localhost:8000/api/v1/"
		}
	]
}